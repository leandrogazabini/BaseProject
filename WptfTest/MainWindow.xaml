<Window x:Class="WptfTest.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:WptfTest"
    mc:Ignorable="d"
        
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
    xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:simpleChildWindow="clr-namespace:MahApps.Metro.SimpleChildWindow;assembly=MahApps.Metro.SimpleChildWindow"       
                     
    xmlns:userControl="clr-namespace:WptfTest.Views.GeneralUserControls"
    xmlns:MainView="clr-namespace:WptfTest.Views.MainView"
        
    fw:AcrylicWindow.Enabled="True"
    fw:AcrylicWindow.TintColor="White"
    fw:AcrylicWindow.TintOpacity="0.65"
    fw:AcrylicWindow.NoiseOpacity="0.05"
    fw:AcrylicWindow.AcrylicWindowStyle="None"
        
    xmlns:viewModel="clr-namespace:WptfTest"
	xmlns:viewModel2="clr-namespace:WptfTest.ViewModels.MainView"
    xmlns:view2="clr-namespace:WptfTest.Views.MainView"
		
    Title="Name here" Height="450" Width="800" WindowStartupLocation="CenterScreen" WindowState="Maximized" 
	d:DataContext="{d:DesignInstance Type=viewModel:MainWindowViewModel, IsDesignTimeCreatable=True}">
	<Window.DataContext>
		<viewModel:MainWindowViewModel/>
	</Window.DataContext>
	<Window.Resources>
		
	</Window.Resources>



		<DockPanel>
	<materialDesign:DrawerHost
            IsLeftDrawerOpen="{Binding IsMenuOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" OpenMode="Default"
		>
		<materialDesign:DrawerHost.LeftDrawerContent>
				<StackPanel VerticalAlignment="Top">

					<ToggleButton 
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                        HorizontalAlignment="Right" 
                        Margin="16"
                        IsChecked="{Binding IsMenuOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

					<TextBox 
                        x:Name="DemoItemsSearchBox"
						Text="{Binding SearchKeyword, UpdateSourceTrigger=PropertyChanged}"
                        Margin="16"
                        Width="200"
                        Height="50"
					    materialDesign:HintAssist.Hint="Search"
                        materialDesign:HintAssist.IsFloating="True"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                        materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                        materialDesign:TextFieldAssist.TextFieldCornerRadius="5"/>
					<!--<materialDesign:Card Content="{Binding MenuItensList[0].MenuName}"/>-->
					<ItemsControl ItemsSource="{Binding MenuItensList[0].MenuN1SubList}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									
									<Expander Header="{Binding MenuN1Name}">
										<ItemsControl ItemsSource="{Binding MenuN1ItensList}">
											<ItemsControl.ItemTemplate>
												<DataTemplate>
													<Button Content="{Binding MenuN1ItemName}" ></Button>
												</DataTemplate>
												
											</ItemsControl.ItemTemplate>
										</ItemsControl>
									</Expander>

								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					

				</StackPanel>
			</materialDesign:DrawerHost.LeftDrawerContent>

			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="*"/>
					<RowDefinition Height="auto"/>
				</Grid.RowDefinitions>
				
				<Grid Grid.Row="0">
					<materialDesign:ColorZone Mode="PrimaryMid"
											  Padding="16">		
						<DockPanel>

							<StackPanel
								  Orientation="Horizontal"
								  materialDesign:RippleAssist.IsCentered="True">		
								<ToggleButton
        Style="{DynamicResource MaterialDesignHamburgerToggleButton}" 
									IsChecked="{Binding IsMenuOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
								<ComboBox
        SelectedIndex="0"
        Margin="8 0 0 0"
        BorderThickness="0"
        materialDesign:ColorZoneAssist.Mode="Standard"
        materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource MaterialDesignPaper}"
        BorderBrush="{DynamicResource MaterialDesignPaper}">
									<ComboBoxItem
          Content="Android" />
									<ComboBoxItem
          Content="iOS" />
									<ComboBoxItem
          Content="Linux" />
									<ComboBoxItem
          Content="Windows" />
								</ComboBox>
								<materialDesign:ColorZone
									Mode="Standard"
									Padding="8 4 8 4"
									CornerRadius="2"
									Panel.ZIndex="1"
									Margin="16 0 0 0"
									materialDesign:ShadowAssist.ShadowDepth="Depth1">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition
              Width="Auto" />
											<ColumnDefinition
              Width="*" />
											<ColumnDefinition
              Width="Auto" />
										</Grid.ColumnDefinitions>
										<Button
            Style="{DynamicResource MaterialDesignToolButton}">
											<materialDesign:PackIcon
              Kind="Search"
              Opacity=".56" />
										</Button>
										<TextBox
            Grid.Column="1"
            Margin="8 0 0 0"
            materialDesign:HintAssist.Hint="Build a search bar"
            materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
            BorderThickness="0"
            MinWidth="200"
            VerticalAlignment="Center" />
										<Button
            Style="{DynamicResource MaterialDesignToolButton}"
            Grid.Column="2">
											<materialDesign:PackIcon
              Kind="Microphone"
              Opacity=".56"
              Margin="8 0 0 0" />
										</Button>
									</Grid>
								</materialDesign:ColorZone>
								<Button
        Style="{DynamicResource MaterialDesignToolForegroundButton}"
        Margin="8 0 0 0"
        Panel.ZIndex="0">
									<materialDesign:PackIcon
          Kind="Send" />
								</Button>
							</StackPanel>
						</DockPanel>
					</materialDesign:ColorZone>
				</Grid>
				
				<Grid Grid.Row="1">

					<StackPanel>

						<ListBox SelectedItem="{Binding SelectedViewToShow, UpdateSourceTrigger=PropertyChanged}"
								 ItemsSource="{Binding ViewsToShow	}">
							
							<ListBox.ItemsPanel>
								<ItemsPanelTemplate>
									<WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
								</ItemsPanelTemplate>
							</ListBox.ItemsPanel>

						</ListBox>
						<Grid>
							<ContentControl DataContext="{Binding SelectedViewToShow}"
											Margin="50"
											Content="{Binding Viewww, UpdateSourceTrigger=PropertyChanged}">
								<!--Content="{StaticResource myDataTemplateSelector}">-->
								<ContentControl.Resources>

									<!--<userControl:UserControlBase x:Key="myDataTemplateSelector"/>

									--><!--<view2:MainView x:Key="myDataTemplateSelector2"/>-->

									<DataTemplate DataType="{x:Type userControl:UserControlBase}">
										<userControl:UserControlBase />
									</DataTemplate>

									<DataTemplate DataType="{x:Type viewModel2:TestViewModel}">
										<view2:TestView />
									</DataTemplate>

									<DataTemplate DataType="{x:Type viewModel2:MainViewModel}">
										<view2:MainView/>
									</DataTemplate>


								</ContentControl.Resources>

							</ContentControl>

						</Grid>

					</StackPanel>
					<!--<materialDesign:Card Margin="10">

					<StackPanel Margin="0">
						<Expander Header="Item" >
							<StackPanel>
								<Button></Button>
								<Expander Header="Item2" Margin="10 5 5 5">
									<Expander Header="Item3" Margin="10 0 0 0">
										<StackPanel >
											<Button>b</Button>
										</StackPanel>

									</Expander>
								</Expander>
							</StackPanel>
						</Expander>
						<Expander Header="Item">

						</Expander>
						<Expander Header="Item">

						</Expander>
						<Expander Header="Item">

						</Expander>
					</StackPanel>
				</materialDesign:Card>-->
					<!--<ContentControl Grid.Column="1"
                            DataContext="{Binding }"
						    Content="{Binding Path=Length, UpdateSourceTrigger=PropertyChanged}">
					<ContentControl.Resources>
						<DataTemplate DataType="{x:Type viewModel2:MainView}">
							<Button>asdadas</Button>
						</DataTemplate>
						<DataTemplate DataType="jaca">
							<UserControl>
								<viewModel2:MainView></viewModel2:MainView>
							</UserControl>
						</DataTemplate>
					</ContentControl.Resources>
				</ContentControl>-->
				</Grid>


				<Grid Grid.Row="2">
					<materialDesign:ColorZone
  Mode="Custom"
  Background="Black"
  Foreground="White"
  Padding="10"
  ClipToBounds="False">
						<StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="16 0 16 0"
    Orientation="Horizontal">

							<TextBlock
      VerticalAlignment="Center"
     
      Text="Material Design In XAML Toolkit" />
							<materialDesign:Badged
      Badge="16"
      VerticalAlignment="Center">
								<Button
        Content="Some action" />
							</materialDesign:Badged>
						</StackPanel>
					</materialDesign:ColorZone>
				</Grid>




				<!--<simpleChildWindow:ChildWindow 
                
                AllowMove="False"
                       
                Grid.ColumnSpan="999"
                Grid.RowSpan="999"
                        
                CloseByEscape="False"
                CloseOnOverlay ="False"
                ShowCloseButton="True"
            
                ShowTitleBar="True"                   
         
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                
                Margin="0"
            
                IsModal="False"
                                    
                IsOpen="False">

				<DockPanel Height="150" Width="150">


				</DockPanel>
			</simpleChildWindow:ChildWindow>
			<mahapps:FlyoutsControl>
				<mahapps:Flyout Position="Top"
                            
                            CloseButtonVisibility="Collapsed"
                            TitleVisibility="Collapsed"
                            mahapps:HeaderedControlHelper.HeaderMargin="0"
                            mahapps:HeaderedControlHelper.HeaderVerticalContentAlignment="Top"
                            mahapps:HeaderedControlHelper.HeaderFontWeight="Normal"
                            IsOpen="True"
                            AreAnimationsEnabled="True"
                            AnimateOpacity="True"
                            AnimateOnPositionChange="True"
                            Theme="Dark"
                        
                            VerticalAlignment="Top"
                            VerticalContentAlignment="Top"
                            HorizontalContentAlignment="Stretch"
                            Panel.ZIndex="9999"
                            Height="80"
                            IsAutoCloseEnabled="True"
                            AutoCloseInterval="3000">


				</mahapps:Flyout>
			</mahapps:FlyoutsControl>-->

			</Grid>

	</materialDesign:DrawerHost>
		</DockPanel>
</Window>
